name: CI

on:
  pull_request:
  push:
    branches: [main]

jobs:
  scan_ruby:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Ensure Brakeman is executable
        run: chmod +x bin/brakeman

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bin/brakeman --no-pager

  scan_js:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Ensure Importmap is executable
        run: chmod +x bin/importmap

      - name: Scan for security vulnerabilities in JavaScript dependencies
        run: bin/importmap audit

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Ensure Rubocop is executable
        run: chmod +x bin/rubocop

      - name: Lint code for consistent style
        run: bin/rubocop -f github

  # format:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Set up Ruby
  #       uses: ruby/setup-ruby@v1
  #       with:
  #         ruby-version: .ruby-version
  #         bundler-cache: true

  #     - name: Check code formatting
  #       run: find . -name '*.rb' -print0 | xargs -0 bundle exec rufo --check

  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: chronio_test

    steps:
      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y curl libjemalloc2 libvips42 postgresql-client

      - name: Install Google Chrome and ChromeDriver
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: stable
          install-chromedriver: true
          install-dependencies: false
        id: setup-chrome

      - name: Check for Chrome and ChromeDriver
        run: |
          ${{ steps.setup-chrome.outputs.chrome-path }} --version
          ${{ steps.setup-chrome.outputs.chromedriver-path }} --version

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set permissions for bin scripts
        run: chmod +x bin/*

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..10}; do
            if pg_isready -h localhost -p 5432 -U postgres; then
              echo "PostgreSQL is ready!";
              exit 0;
            fi;
            echo "Waiting for PostgreSQL to be ready...";
            sleep 2;
          done;
          echo "PostgreSQL failed to start.";
          exit 1;

      # - name: Run tests
      #   env:
      #     RAILS_ENV: test
      #     DATABASE_URL: postgres://postgres:postgres@localhost:5432/chronio_test
      #   run: |
      #     # Create a unique user data directory for each test run
      #     export CHROME_USER_DATA_DIR=$(mktemp -d)
      #     bin/rails db:prepare && bin/rails test:system

      # - name: Keep screenshots from failed system tests
      #   uses: actions/upload-artifact@v4
      #   if: failure()
      #   with:
      #     name: screenshots
      #     path: ${{ github.workspace }}/tmp/screenshots
      #     if-no-files-found: ignore